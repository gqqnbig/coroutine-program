<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <WarningsAsErrors>NU1605;CS0114</WarningsAsErrors>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Configuration.FileExtensions" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Configuration" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="6.0.0" />
    <PackageReference Include="Microsoft.Z3.x86" Version="4.12.2" Condition="'$(PlatformTarget)'=='x86'" />
    <PackageReference Include="Microsoft.Z3" Version="4.12.2" Condition="'$(PlatformTarget)'=='x64'" />
  </ItemGroup>

	<Target Name="Check Architecture for Z3" BeforeTargets="PreBuildEvent" Condition="'$(PlatformTarget)'!='x64' and '$(PlatformTarget)'!='x86'">
		<Error Text="The architecture for this project is '$(PlatformTarget)'. This means we let the CS compiler determines the best architecture, but we have to import the architecture-dependent Z3 package before calling the compiler." 
				Condition="'$(PlatformTarget)'=='' or $(PlatformTarget.ToUpper().Contains('ANYCPU'))" />
		<Error Text="The architecture for this project is '$(PlatformTarget)', but Z3 is only available for x86 or x64." />
	</Target>

  <ItemGroup>
    <None Update="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="libs\libz3.so" Link=".\%(Filename)%(Extension)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

</Project>
